package com.tencent.msdk.notice;

import android.app.Activity;
import android.content.Intent;
import android.content.res.Configuration;
import android.graphics.PixelFormat;
import android.os.Bundle;
import android.util.DisplayMetrics;
import android.view.MotionEvent;
import android.view.Window;

import com.tencent.msdk.tools.Logger;

/**
 * @author hardyshi 2014-03-14
 * 
 * 带URL弹框公告Activiy 设置
 */
public class AlertMsgActivity extends Activity {
	
	private AlertMsgManage mAlertMsgManage = null;
	private NoticeInfo mNoticeInfo = null;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		Logger.d("AlertActivity init");
		super.onCreate(savedInstanceState);
		mNoticeInfo = this.getIntent().getParcelableExtra(NoticeManager.ALERT_MSG_TYPE);
		//根据公告类型设置layout
		mAlertMsgManage = new AlertMsgManage(this);
		showNotice();
		Logger.d("AlertActivity init finished");
	}
	@Override
	protected void onDestroy() {
		Logger.d("Notice activity onDestory");
		super.onDestroy();
	}

	@Override
	protected void onNewIntent(Intent intent) {
		super.onNewIntent(intent);
		Logger.d(intent);
	}
	@Override
	public boolean onTouchEvent(MotionEvent event) {
		return true;
	}

	private void showNotice() {
		Logger.d("AlertActivity:Id"+mNoticeInfo.mNoticeId+";Url:"+mNoticeInfo.mNoticeUrl+";Type:"+mNoticeInfo.mNoticeContentType);
		if(null == mNoticeInfo.mNoticeUrl || mNoticeInfo.mNoticeUrl.equals("")){
			switch (mNoticeInfo.mNoticeContentType) {
				case eMSG_CONTENTTYPE_TEXT:
					NoticeResID.loadTextLayout(this);
					setContentView(NoticeResID.layout_text_notice);
					mAlertMsgManage.displayTextNotice(mNoticeInfo);
					break;
				case eMSG_CONTENTTYPE_IMAGE:
					//初始化公告相关资源
					NoticeResID.loadImageLayout(this);
					setContentView(NoticeResID.layout_image_notice);	
					mAlertMsgManage.displayImageNotice(mNoticeInfo);
					break;				
				case eMSG_CONTENTTYPE_WEB:
					NoticeResID.loadWebLayout(this);
					setContentView(NoticeResID.layout_web_notice);
					mAlertMsgManage.displayWebNotice(mNoticeInfo);
					break;
				default:
					break;
			}
		}else{
			switch (mNoticeInfo.mNoticeContentType) {
				case eMSG_CONTENTTYPE_TEXT:
					NoticeResID.loadTextLayout(this);
					setContentView(NoticeResID.layout_text_notice_url);
					mAlertMsgManage.displayTextNotice(mNoticeInfo);
					break;
				case eMSG_CONTENTTYPE_IMAGE:
					NoticeResID.loadImageLayout(this);
					setContentView(NoticeResID.layout_image_notice_url);
					mAlertMsgManage.displayImageNotice(mNoticeInfo);
					break;
				case eMSG_CONTENTTYPE_WEB:
					NoticeResID.loadWebLayout(this);
					setContentView(NoticeResID.layout_web_notice_url);
					mAlertMsgManage.displayWebNotice(mNoticeInfo);
					break;
				default:
					break;
			}
		}
		//resizeView();
		Logger.d("AlertActivity:"+mNoticeInfo.mNoticeTitle);
	}

	@Override
	public void onConfigurationChanged(Configuration newConfig) {
		//检测是否有对应横竖屏的图片，如果没有的话，关闭公告，弹出下一条
		super.onConfigurationChanged(newConfig);
		Logger.d("onConfigurationChanged");
		showNotice();
	}
}
